/* defaults */







/* modal */
.modal-container {
    position: fixed;
    top: 0;
    left: 0;
    z-index: 10;
  
    display: none;
    justify-content: center;
    align-items: center;
  
    width: 100%;
    height: 100%;
  
    /* --m-background is set as inline style */
    background: var(--m-background);
  }
  
  /* using :target */
  /*
  when users will click/enter button(link) browser will add a #id in a url and when that happens we'll show our users the modal that contains that id.
  */
  .modal-container:target {
    display: flex;
  }
  
  .modal {
    width: 60rem;
    padding: 4rem 2rem;
    border-radius: .8rem;
  
    color: var(--light);
    background: var(--background);
    box-shadow: var(--m-shadow, .4rem .4rem 10.2rem .2rem) var(--shadow-1);
    position: relative;
  
    overflow: hidden;
  }
  
  .modal__title {
    font-size: 3.2rem;
  }
  
  .modal__text {
    padding: 0 4rem;
    margin-top: 4rem;
  
    font-size: 1.6rem;
    line-height: 2;
  }
  
  .modal__btn {
    margin-top: 4rem;
    padding: 1rem 1.6rem;
    border: 1px solid var(--border-color);
    border-radius: 100rem;
  
    color: inherit;
    background: transparent;
    font-size: 1.4rem;
    font-family: inherit;
    letter-spacing: .2rem;
  
    transition: .2s;
    cursor: pointer;
  }
  
  .modal__btn:nth-of-type(1) {
    margin-right: 1rem;
  }
  
  .modal__btn:hover,
  .modal__btn:focus {
    background: var(--focus);
    border-color: var(--focus);
    transform: translateY(-.2rem);
  }
  
  
  /* link-... */
  
  
  .link-2 {
    width: 4rem;
    height: 4rem;
    border: 1px solid var(--border-color);
    border-radius: 100rem;
  
    color: inherit;
    font-size: 2.2rem;
  
    position: absolute;
    top: 2rem;
    right: 2rem;
  
    display: flex;
    justify-content: center;
    align-items: center;
  
    transition: .2s;
  }
  
  .link-2::before {
    content: 'Ã—';
  
    transform: translateY(-.1rem);
  }
  
  .link-2:hover,
  .link-2:focus {
    background: var(--focus);
    border-color: var(--focus);
    transform: translateY(-.2rem);
  }
  
  
  
  
  .task-card {
      margin: 20px;
      padding: 20px;
      width: 200px;
      min-height: 25px;
      display: grid;
      grid-template-rows: 10px 20px 0.5fr 20px;
      border-radius: 10px;
      box-shadow: 0px 6px 10px rgba(0, 0, 0, 0.25);
      transition: all 0.2s;
      background: radial-gradient(#1fe4f5, #3fbafe);
    }
  
    .task-card:hover {
      box-shadow: 0px 6px 10px rgba(0, 0, 0, 0.4);
      transform: scale(1.01);
    }
  
    .card__link,
  .card__exit,
  .card__icon {
    position: relative;
    text-decoration: none;
    color: rgba(255, 255, 255, 0.9);
  }
  
  .card__link::after {
    position: absolute;
    top: 25px;
    left: 0;
    content: "";
    width: 0%;
    height: 3px;
    background-color: rgba(255, 255, 255, 0.6);
    transition: all 0.5s;
  }
  
  .card__link:hover::after {
    width: 100%;
  }
  
  .card__exit {
    grid-row: 1/2;
    justify-self: end;
  }
  
  .card__icon {
    grid-row: 2/3;
    font-size: 30px;
  }
  
  .card__title {
    grid-row: 3/4;
    font-weight: 400;
    color: #ffffff;
  }
  
  .card__apply {
    grid-row: 4/5;
    align-self: center;
  }